---
name: Test s3gw
on:

  pull_request:
    branches:
      - "s3gw"

  push:
    branches:
      ci/test-s3-cache
    tags:
      - "s3gw-v*"

env:
  CMAKE_BUILD_TYPE: Debug
  NPROC: 16

jobs:
  tests:
    runs-on: self-hosted

    steps:

      - name: Checkout ceph
        uses: actions/checkout@v3
        with:
          path: ceph
          submodules: recursive

      - name: Checkout s3gw
        uses: actions/checkout@v3
        with:
          repository: m-ildefons/s3gw
          ref: ci/sccache
          path: s3gw
          submodules: false

      - name: Checkout s3tests
        uses: actions/checkout@v3
        with:
          repository: ceph/s3-tests
          path: s3tests

      - name: Checkout s3gw-status
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/s3gw-status
          path: s3gw-status

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@users.noreply.github.com"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Context
        run: |
          docker context create builder

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builder
          driver: docker-container
          driver-opts: image=moby/buildkit:master

      - name: Install Dependencies
        run: |
          YQ_GH_URL=https://github.com/mikefarah/yq/releases/download
          YQ_VERSION=v4.31.1
          YQ_CHECKSUM=1aef844cbecbbf81036449ea5e7dfcdf19d2d374fab6303fdb8f849d04275d76

          sudo apt-get update
          sudo apt-get install -y \
            bc \
            wget \
            s3cmd \
            tar

          cat > "ceph/s3cmd.cfg" <<EOF
          [default]
          access_key = ${{ secrets.S3_ACCESS_KEY }}
          secret_key = ${{ secrets.S3_SECRET_KEY }}
          host_base = ${{ secrets.S3_HOSTNAME }}
          host_bucket = %{bucket}.%{url}
          signurl_use_https = False
          use_https = False
          signature_v2 = True
          EOF

          # Unfortunately, since yq is only available through snap on Ubuntu and
          # that doesn't work in docker containers (at least not out of the
          # box), this abomination is the way to go to install yq.
          echo "${YQ_CHECKSUM}  yq" >> checksum
          wget -O yq "${YQ_GH_URL}/${YQ_VERSION}/yq_linux_amd64"
          sha256sum -c checksum \
            && sudo mv yq /usr/bin/yq \
            && sudo chmod +x /usr/bin/yq

          python3 -m pip install -r s3tests/requirements.txt
          python3 -m pip install -r ceph/qa/rgw/store/sfs/tests/requirements.txt

      - name: Build Unittests
        run: |
          docker buildx build \
            --build-arg CMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" \
            --build-arg NPROC="$NPROC" \
            --file s3gw/Dockerfile \
            --tag s3gw-unittests \
            --target s3gw-unittests \
            --load \
            .

      - name: Run Unittests
        run: |
          docker run --rm s3gw-unittests

      - name: Build s3gw Container Image
        run: |
          docker buildx build \
            --build-arg CMAKE_BUILD_TYPE=Debug \
            --build-arg NPROC=16 \
            --file s3gw/Dockerfile \
            --tag s3gw \
            --load \
            .

      - name: Run Integration tests
        run: |
          set -e
          set -x

          source ceph/qa/rgw/store/sfs/tests/helpers.sh

          mkdir -p integration/storage
          CONTAINER=$(docker run --rm -d \
            -p 7480:7480 \
            -v $GITHUB_WORKSPACE/integration/storage:/data \
            s3gw \
              --rgw-backend-store sfs \
              --debug-rgw 1 \
              --rgw-lc-debug-interval 10)

          wait_for_http_200 "http://127.0.0.1:7480"

          echo "Running Integration Tests:"
          cd ceph/qa/rgw/store/sfs/tests

          python3 -m unittest -v test-*.py

          docker kill $CONTAINER

      - name: Run smoke tests
        run: |
          set -e
          set -x

          source ceph/qa/rgw/store/sfs/tests/helpers.sh

          mkdir -p smoke/storage
          CONTAINER=$(docker run --rm -d \
            -p 7480:7480 \
            -v $GITHUB_WORKSPACE/smoke/storage:/data \
            s3gw \
              --rgw-backend-store sfs \
              --debug-rgw 1)

          wait_for_http_200 "http://127.0.0.1:7480"

          echo "Running Smoke Tests:"
          cd ceph/qa/rgw/store/sfs/tests
          ./sfs-smoke-test.sh 127.0.0.1:7480

          docker kill $CONTAINER

      - name: Run S3tests
        run: |
          set -x

          # needed for GNU parallel because the version in GH runners is bugged
          mkdir -p ${HOME}/.parallel

          export DEBUG=1
          export CEPH_DIR="${GITHUB_WORKSPACE}/ceph"
          export OUTPUT_DIR="${GITHUB_WORKSPACE}/s3test-results"
          export S3GW_CONTAINER="s3gw"
          export FORCE_CONTAINER=ON
          export FORCE_DOCKER=ON
          export \
            FIXTURES="${GITHUB_WORKSPACE}/ceph/qa/rgw/store/sfs/tests/fixtures"

          export S3TEST_REPO="${GITHUB_WORKSPACE}/s3tests"
          export S3TEST_CONF="${FIXTURES}/s3tests.conf"
          export S3TEST_LIST="${FIXTURES}/s3-tests.txt"
          pushd s3tests
          ${GITHUB_WORKSPACE}/s3gw/tools/tests/s3tests-runner.sh
